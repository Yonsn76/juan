---
import Layout from "../layouts/Layout.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import Carousel from "../components/Carousel.astro";
import HeroBanner from "../components/Home/HeroBanner.astro";
import "../styles/home.css";
// Cart functionality has been removed
import BrandsGrid from "../components/BrandsGrid.astro";
import ProductCard from "../components/Catalog/ProductCard.astro";
import PromotionsSlider from "../components/Promotions/PromotionsSlider.astro";
import { supabase } from "../lib/supabase";
import type { Product } from "../types/catalog";

// Definir un tipo para las promociones
interface Promotion {
  id: number;
  title: string;
  description: string;
  image_path: string;
  whatsapp_message: string;
}

// Las promociones ahora vienen exclusivamente desde Supabase

const services = [
  {
    icon: "tools",
    title: "Mantenimiento",
    description:
      "Servicio técnico especializado para tu moto con los mejores mecánicos certificados",
    video: "reparacion.mp4",
    color: "#e30613",
  },
  {
    icon: "paint-brush",
    title: "Personalización",
    description:
      "Dale un toque único a tu moto con nuestros servicios de personalización premium",
    video: "personalizacion.mp4",
    color: "#ff9500",
  },
  {
    icon: "tachometer-alt",
    title: "Tunning",
    description:
      "Mejora el rendimiento de tu moto con nuestras soluciones de tunning profesional",
    video: "tunning.mp4",
    color: "#2563eb",
  },
  {
    icon: "truck",
    title: "Envíos",
    description:
      "Entrega a domicilio en toda la región con seguimiento en tiempo real",
    video: "envio.mp4",
    color: "#10b981",
  },
];

// Obtener promociones desde Supabase
let promotions: Promotion[] = [];

try {
  // Obtener las promociones desde la tabla 'promotions'
  const { data: promotionsData, error: promotionsError } = await supabase
    .from('promotions')
    .select('*')
    .order('created_at', { ascending: false });

  if (promotionsError) throw promotionsError;
  
  // Procesar las promociones para asegurar que las URLs de las imágenes sean correctas usando el método optimizado
  promotions = (promotionsData || []).map(promo => {
    // Obtener la URL de la imagen desde Supabase siguiendo el mismo patrón que en productos
    const imagePath = promo.image_path?.startsWith('http')
      ? promo.image_path
      : promo.image_path
        ? supabase.storage.from('promos').getPublicUrl(promo.image_path).data.publicUrl
        : '/images/promo1.png';
    
    return {
      ...promo,
      image_path: imagePath
    };
  });
  
  console.log(`Obtenidas ${promotions.length} promociones de Supabase`);
  // Imprimir las URLs de las imágenes para depuración
  promotions.forEach((promo, index) => {
    console.log(`Promoción ${index + 1} - Imagen: ${promo.image_path}`);
  });
} catch (error) {
  console.error('Error al obtener promociones de Supabase:', error);
}

// Obtener productos destacados desde Supabase
let featuredProducts: Product[] = [];

try {
  // Obtener productos destacados (featured = true) con sus categorías
  const { data: productsData, error: productsError } = await supabase
    .from('products')
    .select(`
      *,
      categories:category_id (name)
    `)
    .eq('featured', true)
    .order('created_at', { ascending: false })
    .limit(4);

  if (productsError) throw productsError;

  // Transformar los datos al formato esperado por el componente
  featuredProducts = (productsData || []).map(product => {
    // Obtener la URL de la imagen desde Supabase si es necesario
const imageUrl = product.image?.startsWith('http') 
  ? product.image 
  : supabase.storage.from('productos').getPublicUrl(product.image).data.publicUrl;

return {
  id: product.id,
  name: product.name,
  description: product.description || product.name,
  price: product.price,
  image: imageUrl,
  featured: product.featured,
  details: product.details || product.name,
  discount: product.discount,
  category_id: product.category_id,
  categories: product.categories
};

  });

  console.log(`Obtenidos ${featuredProducts.length} productos destacados de Supabase`);
} catch (error) {
  console.error('Error al obtener productos destacados de Supabase:', error);
}

const brands = [
  { name: "Honda", logo: "/images/brands/Honda_Logo.svg.png" },
  { name: "Yamaha", logo: "/images/brands/Yamaha-Logo.png" },
  { name: "Kawasaki", logo: "/images/brands/Kawasaki-logo.png" },
  { name: "Suzuki", logo: "/images/brands/Suzuki_Motor_Corporation_logo.png" },
  { name: "BMW", logo: "/images/brands/BMW_logo.png" },
  { name: "Ducati", logo: "/images/brands/dukati_logo.png" },
];
---

<Layout title="Inicio">
  <Header slot="header" />

  <!-- Hero Banner con Carrusel de Servicios -->
  <HeroBanner services={services} />

  <PromotionsSlider promotions={promotions} />


  <!-- Featured Products Section -->
  <section class="section products-section">
    <div class="container">
      <div class="section-header">
        <span class="section-subtitle">Lo mejor de nuestro catálogo</span>
        <h2 class="section-title">Productos Destacados</h2>
        <p class="section-description">
          Descubre nuestra selección de productos premium para motociclistas
          exigentes
        </p>
      </div>
      <div class="products-grid">
        {
          featuredProducts.map((product) => (
            <ProductCard 
              product={product}
              categoryName={product.categories?.name || 'Sin categoría'}
            />
          ))
        }
      </div>

      <div class="products-cta">
        <a href="/catalog" class="btn btn-outline btn-lg">
          Ver catálogo completo <i class="fas fa-arrow-right"></i>
        </a>
      </div>
    </div>
  </section>

  <!-- Brands Section -->
  <section class="brands-section" id="brands">
    <div class="container">
      <div class="section-header">
        <span class="section-subtitle">Trabajamos con las mejores</span>
        <h2 class="section-title">Nuestras Marcas</h2>
        <p class="section-description">
          Representamos las marcas más reconocidas en el mundo del motociclismo,
          ofreciendo productos de la más alta calidad.
        </p>
      </div>

      <BrandsGrid brands={brands} />
    </div>
  </section>

  <Footer slot="footer" />
</Layout>



<script>
  document.addEventListener("astro:page-load", () => {
    initPage();
  });


  // Also initialize on DOMContentLoaded to ensure it works on first load
  document.addEventListener("DOMContentLoaded", () => {
    initPage();
  });

  function initPage() {
    
    // Initialize service videos
    document.querySelectorAll(".service-card").forEach((card) => {
      const video = card.querySelector("video");
      if (!video) return;

      card.addEventListener("mouseenter", () => {
        video.play().catch((err) => console.log("Video play error:", err));
      });

      card.addEventListener("mouseleave", () => {
        video.pause();
        video.currentTime = 0;
      });
    });

    // Initialize product action buttons
    document.querySelectorAll(".product-action-btn").forEach((btn) => {
      btn.addEventListener("click", (e) => {
        e.preventDefault();
        e.stopPropagation();

        const action = btn.getAttribute("title");
        if (action === "Ver detalles") {
          // Handle view details action
          const card = btn.closest(".product-card");
          const productId = card
            ?.querySelector(".add-to-cart")
            ?.getAttribute("data-id");
          if (productId) {
            console.log(`Ver detalles del producto: ${productId}`);
            // Here you would navigate to product detail page or open modal
          }
        } else if (action === "Añadir a favoritos") {
          // Handle add to favorites action
          btn.classList.toggle("active");
          const isActive = btn.classList.contains("active");
          if (isActive) {
            btn
              .querySelector("i")
              ?.classList.replace("fa-heart", "fa-heart-broken");
            // Here you would add to favorites in your system
          } else {
            btn
              .querySelector("i")
              ?.classList.replace("fa-heart-broken", "fa-heart");
            // Here you would remove from favorites
          }
        }
      });
    });

    // Cart functionality has been removed

    // Animate elements on scroll
    const animateOnScroll = () => {
      const elements = document.querySelectorAll(
        ".service-card, .product-card, .testimonial-card",
      );

      elements.forEach((el) => {
        const rect = el.getBoundingClientRect();
        const isVisible =
          rect.top <=
            (window.innerHeight || document.documentElement.clientHeight) *
              0.8 && rect.bottom >= 0;

        if (isVisible) {
          el.classList.add("animate-fade-in");
        }
      });
    };

    // Initial check
    animateOnScroll();

    // Add scroll listener
    window.addEventListener("scroll", animateOnScroll);
  }
</script>
