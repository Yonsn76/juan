---
import type { Product } from '../../types/catalog';
import { supabase } from '../../lib/supabase';

interface Props {
  product: Product;
  categoryName: string;
}

const { product, categoryName } = Astro.props;
const { id, name, price, image, discount, categories } = product;
// Asegurarse de que se use la descripción correcta
const description = product.description && product.description !== name ? product.description : '';

/**
 * Formatea un número como moneda en soles peruanos (PEN)
 */
const formatPrice = (price: number): string => {
  return new Intl.NumberFormat('es-PE', {
    style: 'currency',
    currency: 'PEN',
    minimumFractionDigits: 2,
  }).format(price);
};

// Asegurarse de que el precio sea un número
const productPrice = typeof price === 'number' ? price : 0;
const productDiscount = typeof discount === 'number' ? discount : 0;
const finalPrice = productDiscount > 0 
  ? productPrice * (1 - productDiscount / 100) 
  : productPrice;

// Usar la imagen directamente ya que ya viene formateada desde el componente padre
const imageUrl = image || '/images/placeholder-product.jpg';
---

<div class="card" style="position: relative;">
  {productDiscount > 0 && (
    <div class="discount-badge"><span style="display: block; margin-top: 8px; font-size: 16px;">-{productDiscount}%</span></div>
  )}

  <div class="card-img">
    <div class="img">
      <img
        src={imageUrl}
        alt={name}
        loading="lazy"
        onerror="this.src='/images/placeholder-product.jpg'"
        style="width: 100%; height: 100%; object-fit: contain; border-radius: 5px 5px 0 0;"
      />
    </div>
  </div>

  <div class="card-title">{name}</div>
  <hr class="card-divider" />

  <div class="card-description">
    {description}
  </div>
  <div class="card-footer">
    <div class="card-price">
      <span>S/</span> {finalPrice.toFixed(2)}
    </div>
    <div class="button-group">
      <button class="card-btn" aria-label={`Añadir ${name} al carrito`} onclick={`addToCart('${id}', '${name}', ${finalPrice}, '${imageUrl}', ${discount || 0})`}>
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">
          <path d="m397.78 316h-205.13a15 15 0 0 1 -14.65-11.67l-34.54-150.48a15 15 0 0 1 14.62-18.36h274.27a15 15 0 0 1 14.65 18.36l-34.6 150.48a15 15 0 0 1 -14.62 11.67zm-193.19-30h181.25l27.67-120.48h-236.6z"></path><path d="m222 450a57.48 57.48 0 1 1 57.48-57.48 57.54 57.54 0 0 1 -57.48 57.48zm0-84.95a27.48 27.48 0 1 0 27.48 27.47a27.5 27.5 0 0 0 -27.48-27.47z"></path><path d="m368.42 450a57.48 57.48 0 1 1 57.48-57.48 57.54 57.54 0 0 1 -57.48 57.48zm0-84.95a27.48 27.48 0 1 0 27.48 27.47a27.5 27.5 0 0 0 -27.48-27.47z"></path><path d="m158.08 165.49a15 15 0 0 1 -14.23-10.26l-25.71-77.23h-47.44a15 15 0 1 1 0-30h58.3a15 15 0 0 1 14.23 10.26l29.13 87.49a15 15 0 0 1 -14.23 19.74z"></path>
        </svg>
      </button>
      <button class="ver-detalles-btn" aria-label={`Ver detalles de ${name}`} onclick={`showModal('${id}')`}>
        Ver detalles
      </button>
    </div>
  </div>
</div>

<!-- Modal del producto -->
<div id={`modal-${id}`} class="product-modal-overlay" style="display: none;">
  <div class="product-modal-content">
    <button class="close-modal-btn" onclick={`closeModal('${id}')`}>&times;</button>
    
    <div class="product-modal-body">
      <div class="product-modal-image">
        <img 
          src={imageUrl} 
          alt={name}
          loading="lazy"
          onerror="this.src='/images/placeholder-product.jpg'"
        />
      </div>
      
      <div class="product-modal-details">
        <h2>{name}</h2>
        <p class="product-description">{description}</p>
        
        <div class="product-details">
          <h3>Detalles del producto</h3>
          <p>{product.details || "No hay detalles disponibles para este producto."}</p>
        </div>
        
        <div class="product-price-container">
          {discount && discount > 0 ? (
            <>
              <span class="product-current-price"><span>S/</span> {finalPrice.toFixed(2)}</span>
              <span class="product-original-price"><span>S/</span> {productPrice.toFixed(2)}</span>
              <span class="product-discount-badge">-{discount}%</span>
            </>
          ) : (
            <span class="product-current-price"><span>S/</span> {finalPrice.toFixed(2)}</span>
          )}
        </div>
        
        {product.stock !== undefined && (
          <div class="product-stock">
            <span>Stock disponible: {product.stock}</span>
          </div>
        )}
        
        <div class="product-modal-actions">
          <button class="add-to-cart-btn" onclick={`addToCart('${id}', '${name}', ${finalPrice}, '${imageUrl}', ${discount || 0}); this.style.backgroundColor='#444444'; setTimeout(() => this.style.backgroundColor='', 300); closeModal('${id}');`}>
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" width="24" height="24">
              <path d="m397.78 316h-205.13a15 15 0 0 1 -14.65-11.67l-34.54-150.48a15 15 0 0 1 14.62-18.36h274.27a15 15 0 0 1 14.65 18.36l-34.6 150.48a15 15 0 0 1 -14.62 11.67zm-193.19-30h181.25l27.67-120.48h-236.6z"></path><path d="m222 450a57.48 57.48 0 1 1 57.48-57.48 57.54 57.54 0 0 1 -57.48 57.48zm0-84.95a27.48 27.48 0 1 0 27.48 27.47a27.5 27.5 0 0 0 -27.48-27.47z"></path><path d="m368.42 450a57.48 57.48 0 1 1 57.48-57.48 57.54 57.54 0 0 1 -57.48 57.48zm0-84.95a27.48 27.48 0 1 0 27.48 27.47a27.5 27.5 0 0 0 -27.48-27.47z"></path><path d="m158.08 165.49a15 15 0 0 1 -14.23-10.26l-25.71-77.23h-47.44a15 15 0 1 1 0-30h58.3a15 15 0 0 1 14.23 10.26l29.13 87.49a15 15 0 0 1 -14.23 19.74z"></path>
            </svg> Añadir al carrito
          </button>
        </div>
      </div>
    </div>
  </div>
</div>

<script define:vars={{ id }}>
  // Asegurarnos de que las funciones estén definidas solo una vez
  if (typeof window.showModal === 'undefined') {
    window.showModal = (productId) => {
      const modalId = `modal-${productId}`;
      console.log(`Intentando abrir modal con ID: ${modalId}`);
      const modalElement = document.getElementById(modalId);
      
      if (modalElement) {
        console.log(`Modal encontrado, mostrándolo ahora...`);
        modalElement.style.display = 'flex';
        setTimeout(() => {
          modalElement.style.opacity = '1';
        }, 10);
        document.body.style.overflow = 'hidden';
      } else {
        console.error(`Modal no encontrado: ${modalId}`);
        alert('No se pudo abrir el modal de detalles.');
      }
    };

    window.closeModal = (productId) => {
      const modalId = `modal-${productId}`;
      const modalElement = document.getElementById(modalId);
      
      if (modalElement) {
        modalElement.style.opacity = '0';
        setTimeout(() => {
          modalElement.style.display = 'none';
          document.body.style.overflow = 'auto';
        }, 200);
      }
    };
  }

  // Cerrar modal al hacer clic fuera del contenido
  document.addEventListener('DOMContentLoaded', () => {
    const modal = document.getElementById(`modal-${id}`);
    if (modal) {
      modal.addEventListener('click', (event) => {
        if (event.target === modal) {
          window.closeModal(id);
        }
      });
    }
  });
  
  // Registrar evento global para cerrar modales con Escape (solo una vez)
  if (typeof window.modalEscapeHandlerAdded === 'undefined') {
    window.modalEscapeHandlerAdded = true;
    document.addEventListener('keydown', (event) => {
      if (event.key === 'Escape') {
        const openModals = document.querySelectorAll('.product-modal-overlay[style*="display: flex"]');
        openModals.forEach(modal => {
          const modalId = modal.id.replace('modal-', '');
          window.closeModal(modalId);
        });
      }
    });
  }
  
  // Implementar funcionalidad del carrito (solo una vez)
  if (typeof window.addToCart === 'undefined') {
    // Inicializar carrito
    window.cart = JSON.parse(localStorage.getItem('cart')) || [];
    
    // Función para agregar al carrito
    window.addToCart = (id, name, price, image, discount) => {
      const product = { id, name, price, image, discount, quantity: 1 };
      
      // Verificar si el producto ya está en el carrito
      const existingProductIndex = window.cart.findIndex(item => item.id === id);
      
      if (existingProductIndex >= 0) {
        // Incrementar cantidad si ya existe
        window.cart[existingProductIndex].quantity += 1;
      } else {
        // Agregar nuevo producto
        window.cart.push(product);
      }
      
      // Guardar en localStorage
      localStorage.setItem('cart', JSON.stringify(window.cart));
      
      // Actualizar botón flotante del carrito
      updateFloatingCart();
      
      // Mostrar notificación
      showCartNotification(name);
    };
    
    // Función para actualizar el botón flotante del carrito
    window.updateFloatingCart = () => {
      // Obtener el número total de productos en el carrito
      const itemCount = window.cart.reduce((total, item) => total + item.quantity, 0);
      
      // Crear o actualizar el botón flotante del carrito
      let floatingCart = document.getElementById('floating-cart-btn');
      
      if (!floatingCart && itemCount > 0) {
        // Crear el botón flotante si no existe
        floatingCart = document.createElement('div');
        floatingCart.id = 'floating-cart-btn';
        floatingCart.innerHTML = `
          <div class="cart-icon">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" width="24" height="24">
              <path fill="white" d="m397.78 316h-205.13a15 15 0 0 1 -14.65-11.67l-34.54-150.48a15 15 0 0 1 14.62-18.36h274.27a15 15 0 0 1 14.65 18.36l-34.6 150.48a15 15 0 0 1 -14.62 11.67zm-193.19-30h181.25l27.67-120.48h-236.6z"></path>
              <path fill="white" d="m222 450a57.48 57.48 0 1 1 57.48-57.48 57.54 57.54 0 0 1 -57.48 57.48zm0-84.95a27.48 27.48 0 1 0 27.48 27.47a27.5 27.5 0 0 0 -27.48-27.47z"></path>
              <path fill="white" d="m368.42 450a57.48 57.48 0 1 1 57.48-57.48 57.54 57.54 0 0 1 -57.48 57.48zm0-84.95a27.48 27.48 0 1 0 27.48 27.47a27.5 27.5 0 0 0 -27.48-27.47z"></path>
            </svg>
            <span class="floating-cart-counter">${itemCount}</span>
          </div>
          <span class="cart-total">S/ ${calculateCartTotal().toFixed(2)}</span>
        `;
        
        // Estilos del botón flotante
        Object.assign(floatingCart.style, {
          position: 'fixed',
          bottom: '30px',
          right: '30px',
          backgroundColor: '#ff0000',
          color: 'white',
          padding: '8px 16px',
          borderRadius: '24px',
          boxShadow: '0 2px 8px rgba(0, 0, 0, 0.15)',
          cursor: 'pointer',
          zIndex: '1000',
          display: 'flex',
          alignItems: 'center',
          justifyContent: 'center',
          gap: '8px',
          transition: 'all 0.2s',
          transform: 'scale(0)',
          fontWeight: '500'
        });
        
        // Estilos para el contador
        const styleEl = document.createElement('style');
        styleEl.innerHTML = `
          #floating-cart-btn .cart-icon {
            position: relative;
            display: flex;
            align-items: center;
            justify-content: center;
          }
          
          #floating-cart-btn .floating-cart-counter {
            position: absolute;
            top: -6px;
            right: -6px;
            background-color: white;
            color: #ff0000;
            font-size: 11px;
            width: 18px;
            height: 18px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: 500;
            border: 1px solid #ff0000;
          }
          
          #floating-cart-btn:hover {
            transform: scale(1.02) !important;
            box-shadow: 0 3px 10px rgba(0, 0, 0, 0.15);
          }
          
          #floating-cart-btn:active {
            transform: scale(0.95) !important;
            background-color: #cc0000;
          }
          
          #floating-cart-btn .cart-total {
            font-size: 16px;
          }
        `;
        document.head.appendChild(styleEl);
        
        // Agregar al documento
        document.body.appendChild(floatingCart);
        
        // Mostrar con animación
        setTimeout(() => {
          floatingCart.style.transform = 'scale(1)';
        }, 100);
        
        // Evento de clic para mostrar el panel del carrito
        floatingCart.addEventListener('click', () => {
          toggleCartPanel();
        });
      } else if (floatingCart) {
        // Actualizar el botón si ya existe
        if (itemCount > 0) {
          const counter = floatingCart.querySelector('.floating-cart-counter');
          if (counter) counter.textContent = itemCount;
          
          const total = floatingCart.querySelector('.cart-total');
          if (total) total.textContent = `S/ ${calculateCartTotal().toFixed(2)}`;
          
          // Asegurarse de que sea visible
          floatingCart.style.display = 'flex';
          floatingCart.style.transform = 'scale(1)';
        } else {
          // Ocultar si el carrito está vacío
          floatingCart.style.transform = 'scale(0)';
          setTimeout(() => {
            if (floatingCart && floatingCart.parentNode) {
              floatingCart.parentNode.removeChild(floatingCart);
            }
          }, 300);
        }
      }
    };
    
    // Calcular el total del carrito
    window.calculateCartTotal = () => {
      return window.cart.reduce((total, item) => total + (item.price * item.quantity), 0);
    };
    
    // Crear y gestionar el panel desplegable del carrito
    window.createCartPanel = () => {
      // Verificar si ya existe el panel
      if (document.getElementById('cart-slide-panel')) return;
      
      // Crear el contenedor principal del panel
      const cartPanel = document.createElement('div');
      cartPanel.id = 'cart-slide-panel';
      
      // Estructura del panel
      cartPanel.innerHTML = `
        <div class="cart-panel-overlay"></div>
        <div class="cart-panel-content">
          <div class="cart-panel-header">
            <h2>Carrito de compras</h2>
            <button class="cart-panel-close">×</button>
          </div>
          <div class="cart-panel-body"></div>
          <div class="cart-panel-footer">
            <div class="cart-summary-container">
              <h3 class="cart-summary-title">Resumen del pedido:</h3>
              <div class="cart-summary-list"></div>
            </div>
            <div class="cart-total-container">
              <span>Total:</span>
              <span class="cart-panel-total">S/ 0.00</span>
            </div>
            <div class="cart-buttons-container">
              <button class="cart-whatsapp-btn">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="18" height="18" fill="white">
                  <path d="M17.498 14.382c-.301-.15-1.767-.867-2.04-.966-.273-.101-.473-.15-.673.15-.197.295-.771.964-.944 1.162-.175.195-.349.21-.646.075-.3-.15-1.263-.465-2.403-1.485-.888-.795-1.484-1.77-1.66-2.07-.174-.3-.019-.465.13-.615.136-.135.301-.345.451-.523.146-.181.194-.301.297-.496.1-.21.049-.375-.025-.524-.075-.15-.672-1.62-.922-2.206-.24-.584-.487-.51-.672-.51-.172-.015-.371-.015-.571-.015-.2 0-.523.074-.797.359-.273.3-1.045 1.02-1.045 2.475s1.07 2.865 1.219 3.075c.149.195 2.105 3.195 5.1 4.485.714.3 1.27.48 1.704.629.714.227 1.365.195 1.88.121.574-.091 1.767-.721 2.016-1.426.255-.705.255-1.29.18-1.425-.074-.135-.27-.21-.57-.345m-5.446 7.443h-.016c-1.77 0-3.524-.48-5.055-1.38l-.36-.214-3.75.975 1.005-3.645-.239-.375a9.869 9.869 0 0 1-1.516-5.26c0-5.445 4.455-9.885 9.942-9.885a9.865 9.865 0 0 1 7.022 2.91 9.788 9.788 0 0 1 2.906 6.975c-.004 5.445-4.455 9.885-9.935 9.885M20.52 3.449C18.24 1.245 15.24 0 12.045 0 5.463 0 .104 5.334.101 11.893c0 2.096.549 4.14 1.595 5.945L0 24l6.335-1.652a12.062 12.062 0 0 0 5.71 1.447h.006c6.585 0 11.946-5.336 11.949-11.896 0-3.176-1.24-6.165-3.495-8.411"/>
                </svg>
                Pedir por WhatsApp
              </button>
              <button class="cart-gmail-btn">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="18" height="18" fill="white">
                  <path d="M24 5.457v13.909c0 .904-.732 1.636-1.636 1.636h-3.819V11.73L12 16.64l-6.545-4.91v9.273H1.636A1.636 1.636 0 0 1 0 19.366V5.457c0-2.023 2.309-3.178 3.927-1.964L5.455 4.64 12 9.548l6.545-4.91 1.528-1.145C21.69 2.28 24 3.434 24 5.457z"/>
                </svg>
                Pedir por Email
              </button>
            </div>
          </div>
        </div>
      `;
      
      // Estilos del panel
      const styleElement = document.createElement('style');
      styleElement.innerHTML = `
        #cart-slide-panel {
          visibility: hidden;
          position: fixed;
          top: 0;
          left: 0;
          width: 100%;
          height: 100%;
          z-index: 2000;
        }
        
        #cart-slide-panel.active {
          visibility: visible;
        }
        
        .cart-panel-overlay {
          position: absolute;
          top: 0;
          left: 0;
          width: 100%;
          height: 100%;
          background-color: rgba(0, 0, 0, 0.5);
          opacity: 0;
          transition: opacity 0.3s ease;
        }
        
        #cart-slide-panel.active .cart-panel-overlay {
          opacity: 1;
        }
        
        .cart-panel-content {
          position: absolute;
          top: 0;
          right: -400px;
          width: 380px;
          max-width: 90%;
          height: 100%;
          background-color: white;
          box-shadow: -1px 0 8px rgba(0, 0, 0, 0.15);
          display: flex;
          flex-direction: column;
          transition: right 0.25s ease;
          border-left: 1px solid #eaeaea;
        }
        
        #cart-slide-panel.active .cart-panel-content {
          right: 0;
        }
        
        .cart-panel-header {
          display: flex;
          justify-content: space-between;
          align-items: center;
          padding: 12px 16px;
          border-bottom: 1px solid #eaeaea;
          background-color: #fafafa;
        }
        
        .cart-panel-header h2 {
          margin: 0;
          font-size: 16px;
          color: #222;
          font-weight: 500;
        }
        
        .cart-panel-close {
          background: none;
          border: none;
          font-size: 24px;
          cursor: pointer;
          color: #888;
          transition: color 0.2s;
        }
        
        .cart-panel-close:hover {
          color: #ff0000;
        }
        
        .cart-panel-body {
          flex: 1;
          overflow-y: auto;
          padding: 0;
        }
        
        .cart-empty-message {
          padding: 30px 20px;
          text-align: center;
          color: #888;
        }
        
        .cart-panel-footer {
          padding: 12px 16px;
          border-top: 1px solid #eaeaea;
          background-color: #fafafa;
        }
        
        .cart-total-container {
          display: flex;
          justify-content: space-between;
          margin-bottom: 15px;
          font-size: 18px;
          font-weight: bold;
          color: #333;
        }
        
        .cart-buttons-container {
          display: flex;
          gap: 10px;
          margin-top: 10px;
        }
        
        .cart-whatsapp-btn,
        .cart-action-btn {
          flex: 1;
          padding: 8px 12px;
          border: none;
          border-radius: 3px;
          font-weight: 500;
          cursor: pointer;
          transition: all 0.2s ease;
          text-align: center;
          display: flex;
          align-items: center;
          justify-content: center;
          gap: 6px;
          font-size: 14px;
        }
        
        .cart-whatsapp-btn {
          background-color: #25D366;
        }
        
        .cart-whatsapp-btn:hover {
          background-color: #128C7E;
        }
        
        .cart-whatsapp-btn:active {
          background-color: #075E54;
        }
        
        .cart-gmail-btn {
          background-color: #D44638;
        }
        
        .cart-gmail-btn:hover {
          background-color: #B23121;
        }
        
        .cart-gmail-btn:active {
          background-color: #8F261A;
        }
        
        .cart-item {
          display: flex;
          padding: 15px 20px;
          border-bottom: 1px solid #eee;
        }
        
        .cart-item-image {
          width: 70px;
          height: 70px;
          border-radius: 4px;
          object-fit: cover;
          margin-right: 15px;
          border: 1px solid #eee;
        }
        
        .cart-item-details {
          flex: 1;
        }
        
        .cart-item-name {
          font-weight: bold;
          color: #333;
          margin-bottom: 5px;
        }
        
        .cart-item-price {
          color: #ff0000;
          font-weight: bold;
          margin-bottom: 8px;
        }
        
        .cart-item-actions {
          display: flex;
          align-items: center;
        }
        
        .quantity-control {
          display: flex;
          align-items: center;
          border: 1px solid #ddd;
          border-radius: 4px;
          overflow: hidden;
        }
        
        .quantity-btn {
          width: 30px;
          height: 30px;
          background-color: transparent;
          border: 2px solid #00b300;
          font-size: 14px;
          cursor: pointer;
          display: flex;
          align-items: center;
          justify-content: center;
          color: #00b300;
          transition: all 0.2s ease;
          border-radius: 3px;
        }
        
        .quantity-btn:hover {
          border-color: #009900;
          color: #009900;
        }
        
        .quantity-display {
          width: 40px;
          height: 30px;
          border: none;
          border-left: 1px solid #ddd;
          border-right: 1px solid #ddd;
          text-align: center;
          font-size: 14px;
        }
        
        .remove-item-btn {
          margin-left: auto;
          background: none;
          border: none;
          color: #888;
          cursor: pointer;
          font-size: 20px;
          padding: 0 10px;
        }
        
        .remove-item-btn:hover {
          color: #ff0000;
        }
        
        @media (max-width: 480px) {
          .cart-panel-content {
            width: 100%;
            right: -100%;
          }
          
          .cart-item {
            padding: 10px 15px;
          }
          
          .cart-item-image {
            width: 60px;
            height: 60px;
          }
        }
      `;
      
      // Estilos para el resumen del pedido
      styleElement.innerHTML += `
        .cart-summary-container {
          padding: 10px 0;
          border-bottom: 1px solid #eaeaea;
          margin-bottom: 10px;
        }
        
        .cart-summary-title {
          font-size: 14px;
          font-weight: 500;
          color: #222;
          margin: 0 0 8px 0;
        }
        
        .cart-summary-list {
          font-size: 13px;
          color: #444;
        }
        
        .cart-summary-item {
          display: flex;
          justify-content: space-between;
          margin-bottom: 4px;
          padding-bottom: 4px;
          border-bottom: 1px dashed #eaeaea;
        }
        
        .cart-summary-item:last-child {
          border-bottom: none;
          margin-bottom: 0;
        }
        
        .cart-summary-product {
          display: flex;
        }
        
        .cart-summary-quantity {
          color: #666;
          margin-right: 4px;
        }
        
        .cart-summary-name {
          flex: 1;
          overflow: hidden;
          text-overflow: ellipsis;
          white-space: nowrap;
        }
        
        .cart-summary-price {
          font-weight: 500;
          white-space: nowrap;
        }
      `;
      
      // Agregar panel y estilos al documento
      document.head.appendChild(styleElement);
      document.body.appendChild(cartPanel);
      
      // Eventos del panel
      const closeBtn = cartPanel.querySelector('.cart-panel-close');
      const overlay = cartPanel.querySelector('.cart-panel-overlay');
      
      if (closeBtn) {
        closeBtn.addEventListener('click', () => toggleCartPanel());
      }
      
      if (overlay) {
        overlay.addEventListener('click', () => toggleCartPanel());
      }
      
      // Agregar eventos para los botones de WhatsApp y Gmail
      const whatsappBtn = cartPanel.querySelector('.cart-whatsapp-btn');
      const gmailBtn = cartPanel.querySelector('.cart-gmail-btn');
      
      if (whatsappBtn) {
        whatsappBtn.addEventListener('click', () => {
          // Preparar mensaje para WhatsApp
          const phoneNumber = '51963193309'; // Número actualizado
          const message = prepareOrderMessage();
          
          // Crear enlace de WhatsApp
          const whatsappUrl = `https://wa.me/${phoneNumber}?text=${encodeURIComponent(message)}`;
          
          // Abrir en nueva pestaña
          window.open(whatsappUrl, '_blank');
        });
      }
      
      if (gmailBtn) {
        gmailBtn.addEventListener('click', () => {
          // Preparar mensaje para Gmail
          const email = 'retobloyons@gmail.com'; // Email actualizado
          const subject = 'Nuevo pedido desde CasaBiker';
          const message = prepareOrderMessage();
          
          // Crear enlace de Gmail
          const gmailUrl = `mailto:${email}?subject=${encodeURIComponent(subject)}&body=${encodeURIComponent(message)}`;
          
          // Abrir cliente de correo
          window.location.href = gmailUrl;
        });
      }
      
      // Cerrar panel con ESC
      document.addEventListener('keydown', (e) => {
        if (e.key === 'Escape' && cartPanel.classList.contains('active')) {
          toggleCartPanel();
        }
      });
    };
    
    // Actualizar el contenido del panel del carrito
    window.updateCartPanelContent = () => {
      const cartPanel = document.getElementById('cart-slide-panel');
      if (!cartPanel) return;
      
      const cartBody = cartPanel.querySelector('.cart-panel-body');
      const cartTotal = cartPanel.querySelector('.cart-panel-total');
      
      if (cartBody) {
        // Limpiar contenido actual
        cartBody.innerHTML = '';
        
        if (window.cart.length === 0) {
          // Mensaje de carrito vacío
          cartBody.innerHTML = `<div class="cart-empty-message">Tu carrito está vacío</div>`;
        } else {
          // Mostrar productos en el carrito
          window.cart.forEach((item, index) => {
            const cartItem = document.createElement('div');
            cartItem.className = 'cart-item';
            
            cartItem.innerHTML = `
              <img src="${item.image || 'https://via.placeholder.com/70x70'}" alt="${item.name}" class="cart-item-image">
              <div class="cart-item-details">
                <div class="cart-item-name">${item.name}</div>
                <div class="cart-item-price">S/ ${item.price.toFixed(2)}</div>
                <div class="cart-item-actions">
                  <div class="quantity-control">
                    <button class="quantity-btn quantity-decrease" data-index="${index}">◀</button>
                    <input type="text" class="quantity-display" value="${item.quantity}" readonly>
                    <button class="quantity-btn quantity-increase" data-index="${index}">▶</button>
                  </div>
                  <button class="remove-item-btn" data-index="${index}">×</button>
                </div>
              </div>
            `;
            
            cartBody.appendChild(cartItem);
          });
          
          // Eventos para incrementar, decrementar y eliminar
          cartBody.querySelectorAll('.quantity-increase').forEach(btn => {
            btn.addEventListener('click', () => {
              const index = parseInt(btn.getAttribute('data-index'));
              window.cart[index].quantity += 1;
              localStorage.setItem('cart', JSON.stringify(window.cart));
              updateFloatingCart();
              updateCartPanelContent();
            });
          });
          
          cartBody.querySelectorAll('.quantity-decrease').forEach(btn => {
            btn.addEventListener('click', () => {
              const index = parseInt(btn.getAttribute('data-index'));
              if (window.cart[index].quantity > 1) {
                window.cart[index].quantity -= 1;
                localStorage.setItem('cart', JSON.stringify(window.cart));
                updateFloatingCart();
                updateCartPanelContent();
              }
            });
          });
          
          cartBody.querySelectorAll('.remove-item-btn').forEach(btn => {
            btn.addEventListener('click', () => {
              const index = parseInt(btn.getAttribute('data-index'));
              window.cart.splice(index, 1);
              localStorage.setItem('cart', JSON.stringify(window.cart));
              updateFloatingCart();
              updateCartPanelContent();
            });
          });
        }
      }
      
      if (cartTotal) {
        cartTotal.textContent = `S/ ${calculateCartTotal().toFixed(2)}`;
      }
      
      // Actualizar el resumen de productos
      const cartSummaryList = cartPanel.querySelector('.cart-summary-list');
      if (cartSummaryList) {
        cartSummaryList.innerHTML = '';
        
        if (window.cart.length === 0) {
          cartSummaryList.innerHTML = '<div class="cart-summary-empty">No hay productos en el carrito</div>';
        } else {
          window.cart.forEach((item) => {
            const summaryItem = document.createElement('div');
            summaryItem.className = 'cart-summary-item';
            
            const productTotal = (item.price * item.quantity).toFixed(2);
            
            summaryItem.innerHTML = `
              <div class="cart-summary-product">
                <span class="cart-summary-quantity">${item.quantity}x</span>
                <span class="cart-summary-name">${item.name}</span>
              </div>
              <div class="cart-summary-price">S/ ${productTotal}</div>
            `;
            
            cartSummaryList.appendChild(summaryItem);
          });
        }
      }
    };
    
    // Preparar mensaje para pedidos
    window.prepareOrderMessage = () => {
      // Encabezado
      let message = "*NUEVO PEDIDO DE CASA BIKER*\n\n";
      message += "*Productos:*\n";
      
      // Detalles de productos
      window.cart.forEach((item, index) => {
        message += `${index + 1}. ${item.name} - ${item.quantity} unidad(es) - S/ ${(item.price * item.quantity).toFixed(2)}\n`;
      });
      
      // Total
      message += "\n*Total: S/ " + calculateCartTotal().toFixed(2) + "*\n\n";
      message += "Por favor, confirmar disponibilidad y tiempo de entrega. Gracias.";
      
      return message;
    };
    
    // Alternar la visibilidad del panel del carrito
    window.toggleCartPanel = () => {
      // Asegurarse de que el panel existe
      if (!document.getElementById('cart-slide-panel')) {
        createCartPanel();
      }
      
      const cartPanel = document.getElementById('cart-slide-panel');
      
      if (cartPanel) {
        // Alternar la clase active
        cartPanel.classList.toggle('active');
        
        // Si el panel ahora está activo, actualizar su contenido
        if (cartPanel.classList.contains('active')) {
          updateCartPanelContent();
          document.body.style.overflow = 'hidden'; // Prevenir scroll
        } else {
          document.body.style.overflow = ''; // Restaurar scroll
        }
      }
    };
    
    // Función para mostrar notificación
    window.showCartNotification = (productName) => {
      // Crear o reutilizar el elemento de notificación
      let notification = document.getElementById('cart-notification');
      
      if (!notification) {
        notification = document.createElement('div');
        notification.id = 'cart-notification';
        notification.style.position = 'fixed';
        notification.style.bottom = '100px'; // Ajustado para no solapar con el botón del carrito
        notification.style.right = '30px';
        notification.style.backgroundColor = '#4CAF50';
        notification.style.color = 'white';
        notification.style.padding = '12px 20px';
        notification.style.borderRadius = '4px';
        notification.style.boxShadow = '0 2px 10px rgba(0,0,0,0.2)';
        notification.style.zIndex = '999';
        notification.style.transform = 'translateY(100px)';
        notification.style.opacity = '0';
        notification.style.transition = 'transform 0.3s, opacity 0.3s';
        document.body.appendChild(notification);
      }
      
      notification.textContent = `¡${productName} agregado al carrito!`;
      
      // Mostrar la notificación
      setTimeout(() => {
        notification.style.transform = 'translateY(0)';
        notification.style.opacity = '1';
        
        // Ocultar después de 3 segundos
        setTimeout(() => {
          notification.style.transform = 'translateY(100px)';
          notification.style.opacity = '0';
        }, 3000);
      }, 100);
    };
    
    // Inicializar el botón flotante del carrito al cargar la página
    document.addEventListener('DOMContentLoaded', () => {
      updateFloatingCart();
    });
  }
</script>

<style scoped>
  .card {
    --font-color: #323232;
    --font-color-sub: #666;
    --bg-color: #fff;
    --main-color: #ff0000;
    --main-focus: #000000;
    width: 100%;
    min-height: 280px;
    background: var(--bg-color);
    border: 2px solid var(--main-color);
    box-shadow: 4px 4px var(--main-color);
    border-radius: 5px;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    padding: 12px;
    gap: 10px;
    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
  }

  .card:last-child {
    justify-content: flex-end;
  }

  .card-img {
    transition: all 0.5s;
    display: flex;
    justify-content: center;
  }

  .card-img .img {
    transform: scale(1);
    position: relative;
    box-sizing: border-box;
    width: 120px;
    height: 120px;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .card-title {
    font-size: 16px;
    font-weight: 500;
    text-align: center;
    color: var(--font-color);
  }

  .card-subtitle {
    font-size: 14px;
    font-weight: 400;
    color: var(--font-color-sub);
  }

  .card-divider {
    width: 100%;
    border: 1px solid var(--main-color);
    border-radius: 50px;
  }

  .card-description {
    font-size: 12px;
    font-weight: 400;
    color: #0066cc; /* Color azul para la descripción */
    margin-top: 5px;
    margin-bottom: 5px;
    flex-grow: 1;
    min-height: 40px;
    overflow: hidden;
    text-overflow: ellipsis;
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
  }

  .card-footer {
    display: flex;
    flex-direction: column;
    gap: 10px;
  }

  .card-price {
    font-size: 16px;
    font-weight: 500;
    color: var(--font-color);
  }

  .card-price span {
    font-size: 16px;
    font-weight: 500;
    color: var(--font-color-sub);
  }

  .button-group {
    display: flex;
    gap: 10px;
    width: 100%;
  }

  .card-btn {
    height: 30px;
    background: var(--bg-color);
    border: 2px solid var(--main-color);
    border-radius: 5px;
    padding: 0 10px;
    transition: all 0.3s;
    cursor: pointer;
  }
  
  .ver-detalles-btn {
    height: 30px;
    background-color: var(--main-focus);
    color: white;
    border: 2px solid var(--main-color);
    border-radius: 5px;
    padding: 0 8px;
    font-weight: bold;
    cursor: pointer;
    transition: all 0.3s;
    white-space: nowrap;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-grow: 1;
  }
  
  .ver-detalles-btn:hover {
    background-color: var(--main-color);
    transform: translateY(-2px);
    box-shadow: 2px 2px var(--main-focus);
  }
  
  /* Estilos para el modal */
  .product-modal-overlay {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, 0.7);
    display: none;
    justify-content: center;
    align-items: center;
    z-index: 1000;
    padding: 1rem;
    opacity: 0;
    transition: opacity 0.2s ease-in-out;
  }
  
  .product-modal-content {
    background: #ffffff;
    border-radius: 12px;
    width: 90%;
    max-width: 600px;
    max-height: 85vh;
    overflow-y: auto;
    position: relative;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);
    border: 1px solid #eaeaea;
    border-left: 4px solid var(--main-color);
    color: #333;
  }
  
  .close-modal-btn {
    position: absolute;
    top: 1rem;
    right: 1rem;
    background: #f0f0f0;
    border: none;
    font-size: 1.5rem;
    cursor: pointer;
    color: #666;
    z-index: 10;
    width: 30px;
    height: 30px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    line-height: 1;
    transition: all 0.2s;
  }
  
  .close-modal-btn:hover {
    background: #e0e0e0;
    color: var(--main-color);
    transform: rotate(90deg);
  }
  
  .product-modal-body {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 1.5rem;
    padding: 1.5rem;
  }
  
  .product-modal-image {
    position: relative;
    padding-top: 100%;
    overflow: hidden;
    border-radius: 12px;
    background: #f7f7f7;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
    border: 1px solid #eaeaea;
  }
  
  .product-modal-image img {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: contain;
    padding: 1rem;
  }
  
  .product-modal-details {
    display: flex;
    flex-direction: column;
  }
  
  .product-modal-details h2 {
    margin: 0 0 0.8rem 0;
    color: #222;
    font-size: 1.5rem;
    font-weight: 700;
    position: relative;
    padding-bottom: 0.5rem;
  }
  
  .product-modal-details h2::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 40px;
    height: 3px;
    background-color: var(--main-color);
    border-radius: 3px;
  }
  
  .product-description {
    color: #666;
    line-height: 1.6;
    margin-bottom: 1.2rem;
    font-size: 0.95rem;
  }
  
  .product-details {
    margin-bottom: 1.2rem;
    padding: 1rem 1.2rem;
    background-color: #f8f8f8;
    border-radius: 10px;
    border: 1px solid #eaeaea;
    font-size: 0.9rem;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
    position: relative;
    transition: transform 0.2s, box-shadow 0.2s;
  }
  
  .product-details:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.08);
  }
  
  .product-details::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 5px;
    height: 100%;
    background: var(--main-color);
    border-radius: 10px 0 0 10px;
  }
  
  .product-details h3 {
    margin-top: 0;
    margin-bottom: 0.8rem;
    color: #333;
    font-weight: 600;
    display: inline-block;
    padding: 0.2rem 0.8rem;
    background-color: rgba(255, 0, 0, 0.1);
    color: var(--main-color);
    border-radius: 20px;
    font-size: 0.8rem;
    letter-spacing: 0.5px;
    text-transform: uppercase;
  }
  
  .product-price-container {
    display: flex;
    align-items: center;
    gap: 1rem;
    margin-bottom: 1.2rem;
    background-color: #f0f7ff;
    padding: 1rem;
    border-radius: 10px;
    border: 1px dashed #d0e0ff;
  }
  
  .product-current-price {
    font-size: 1.6rem;
    font-weight: 700;
    color: #1a1a1a;
  }
  
  .product-original-price {
    text-decoration: line-through;
    color: #999;
  }
  
  .product-discount-badge {
    background: #ff4757;
    color: white;
    padding: 0.25rem 0.75rem;
    border-radius: 20px;
    font-size: 0.9rem;
    font-weight: 600;
  }
  
  .product-stock {
    margin-bottom: 1rem;
    font-size: 0.9rem;
    color: #666;
  }
  
  .product-modal-actions {
    display: flex;
    gap: 1rem;
    margin-top: 1rem;
  }
  
  .add-to-cart-btn {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    background-color: #ff0000 !important;
    color: white !important;
    border: none;
    border-radius: 30px;
    padding: 0.75rem 1.5rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s;
    box-shadow: 0 4px 10px rgba(255, 0, 0, 0.2);
    width: 100%;
    letter-spacing: 0.5px;
    text-transform: uppercase;
    font-size: 0.9rem;
    -webkit-tap-highlight-color: transparent;
  }
  
  .add-to-cart-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 6px 14px rgba(255, 0, 0, 0.3);
    background-color: #cc0000 !important;
  }
  
  .add-to-cart-btn:active,
  .add-to-cart-btn:focus {
    background-color: #444444 !important;
    transform: translateY(1px);
    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2);
    transition: background-color 0.1s, transform 0.1s, box-shadow 0.1s;
    outline: none;
  }
  
  .add-to-cart-btn svg {
    fill: white;
    width: 20px;
    height: 20px;
  }
  
  .add-to-cart-btn:hover {
    background-color: var(--main-focus);
  }
  
  /* Responsive para modal en dispositivos móviles */
  @media (max-width: 768px) {
    .product-modal-content {
      width: 95%;
      max-height: 80vh;
    }
    
    .product-modal-body {
      grid-template-columns: 1fr;
      gap: 1rem;
      padding: 1rem;
    }
    
    .product-modal-image {
      padding-top: 60%;
    }
    
    .product-details {
      padding: 0.6rem;
      font-size: 0.85rem;
    }
    
    .product-modal-details h2 {
      font-size: 1.2rem;
      margin-bottom: 0.6rem;
    }
    
    .product-price-container {
      margin-bottom: 0.8rem;
    }
    
    .product-current-price {
      font-size: 1.3rem;
    }
  }
  
  @media (max-width: 480px) {
    .product-modal-content {
      width: 95%;
      max-height: 75vh;
    }
    
    .product-modal-body {
      padding: 0.8rem;
    }
    
    .product-modal-image {
      padding-top: 50%;
    }
    
    .close-modal-btn {
      top: 0.5rem;
      right: 0.5rem;
    }
  }

  .card-btn svg {
    width: 100%;
    height: 100%;
    fill: var(--main-color);
    transition: all 0.3s;
  }

  .card-img:hover {
    transform: translateY(-3px);
  }

  .card-btn:hover {
    border: 2px solid var(--main-focus);
  }

  .card-btn:hover svg {
    fill: var(--main-focus);
  }

  .card-btn:active {
    transform: translateY(3px);
  }
  
  /* Ajustes específicos para móviles */
  /* Estilo para la insignia de descuento tipo flash/explosión de supermercado */
  .discount-badge {
    position: absolute;
    top: -5px;
    right: -10px;
    background-color: #ff0000;
    color: white;
    padding: 15px 10px;
    font-weight: bold;
    font-size: 14px;
    z-index: 5;
    clip-path: polygon(0% 0%, 100% 0%, 100% 100%, 50% 80%, 0% 100%);
    animation: changeColor 2s infinite alternate;
    box-shadow: 0 2px 8px rgba(0,0,0,0.3);
  }
  
  .discount-badge::before {
    content: 'OFERTA';
    position: absolute;
    top: 3px;
    left: 0;
    right: 0;
    text-align: center;
    font-size: 8px;
    font-weight: 800;
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }
  
  .discount-badge::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: repeating-linear-gradient(
      -45deg,
      rgba(255, 255, 255, 0.1),
      rgba(255, 255, 255, 0.1) 10px,
      rgba(255, 255, 255, 0) 10px,
      rgba(255, 255, 255, 0) 20px
    );
  }
  
  .discount-badge:hover {
    transform: rotate(0deg) scale(1.1);
  }
  
  @keyframes changeColor {
    0% {
      background-color: #ff0000;
    }
    100% {
      background-color: #4CAF50;
    }
  }

  @media (max-width: 576px) {
    .card {
      width: 100%;
      min-height: 250px;
      padding: 8px;
      margin: 0 auto;
    }
    
    .card-img .img {
      width: 100px;
      height: 100px;
    }
    
    .card-title {
      font-size: 14px;
    }
    
    .card-description {
      font-size: 11px;
      min-height: 30px;
      -webkit-line-clamp: 2;
    }
    
    .card-price {
      font-size: 14px;
    }
    
    .card-price span {
      font-size: 14px;
    }
    
    .button-group {
      flex-direction: column;
      gap: 5px;
    }
    
    .card-btn,
    .ver-detalles-btn {
      height: 28px;
      width: 100%;
      font-size: 12px;
      padding: 0 5px;
    }
    
    .card svg {
      width: 16px;
      height: 16px;
    }
    
    .discount-badge {
      top: 0px;
      right: -5px;
      padding: 12px 8px;
      font-size: 12px;
    }
    
    .discount-badge::before {
      font-size: 6px;
      top: 2px;
    }
    
    .discount-badge span {
      margin-top: 5px;
      font-size: 14px;
    }
  }
</style>
