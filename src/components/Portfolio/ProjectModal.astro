---
---

<div id="project-modal" class="modal">
  <div class="modal-content">
    <div class="modal-header">
      <h2 id="modal-title">Detalles del Proyecto</h2>
      <button id="close-modal" class="close-btn">
        <span class="sr-only">Cerrar</span>
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor">
          <path d="M18 6L6 18M6 6l12 12" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
    </div>
    <div id="modal-content" class="modal-body">
      <!-- Content will be dynamically inserted here -->
    </div>
  </div>
</div>

<style>
  .modal {
    display: none;
    position: fixed;
    inset: 0;
    background-color: rgba(0, 0, 0, 0.5);
    z-index: 1000;
    padding: 1rem;
    overflow-y: auto;
  }

  .modal.active {
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .modal-content {
    background-color: white;
    border-radius: 0.5rem;
    max-width: 800px;
    width: 100%;
    max-height: 90vh;
    overflow-y: auto;
    position: relative;
  }

  .modal-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1.5rem;
    border-bottom: 1px solid #eee;
  }

  .modal-header h2 {
    font-size: 1.5rem;
    font-weight: bold;
    color: var(--biker-black);
    margin: 0;
  }

  .close-btn {
    background: none;
    border: none;
    padding: 0.5rem;
    cursor: pointer;
    color: #666;
    transition: color 0.3s ease;
  }

  .close-btn:hover {
    color: var(--biker-black);
  }

  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
  }

  .modal-body {
    padding: 1.5rem;
  }

  .project-details {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 2rem;
  }

  .project-image {
    width: 100%;
    height: auto;
    border-radius: 0.5rem;
  }

  .project-info h3 {
    font-size: 1.25rem;
    font-weight: bold;
    color: var(--biker-black);
    margin-bottom: 1rem;
  }

  .project-info p {
    color: #444;
    line-height: 1.6;
    margin-bottom: 1rem;
  }

  .project-specs {
    margin-top: 1.5rem;
    padding-top: 1.5rem;
    border-top: 1px solid #eee;
  }

  .project-specs h4 {
    font-weight: bold;
    margin-bottom: 0.5rem;
  }

  .project-specs ul {
    list-style: none;
    padding: 0;
  }

  .project-specs li {
    margin-bottom: 0.5rem;
    padding-left: 1.5rem;
    position: relative;
  }

  .project-specs li::before {
    content: '•';
    color: var(--biker-red);
    position: absolute;
    left: 0;
  }

  @media (max-width: 768px) {
    .project-details {
      grid-template-columns: 1fr;
    }

    .modal-content {
      margin: 1rem;
    }
  }
</style>

<script>
  const modal = document.getElementById('project-modal');
  const closeBtn = document.getElementById('close-modal');
  const modalContent = document.getElementById('modal-content');

  // Close modal when clicking close button
  closeBtn?.addEventListener('click', () => {
    modal?.classList.remove('active');
  });

  // Close modal when clicking outside
  modal?.addEventListener('click', (e) => {
    if (e.target === modal) {
      modal.classList.remove('active');
    }
  });

  // Close modal with Escape key
  document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape' && modal?.classList.contains('active')) {
      modal.classList.remove('active');
    }
  });

  // Listen for showProjectDetails event
  window.addEventListener('showProjectDetails', (e: CustomEvent) => {
    const projectId = e.detail.projectId;
    const project = getProjectDetails(projectId);

    if (project && modalContent) {
      modalContent.innerHTML = `
        <div class="project-details">
          <img src="/images/${project.image}" alt="${project.title}" class="project-image">
          <div class="project-info">
            <h3>${project.title}</h3>
            <p>${project.description}</p>
            <div class="project-specs">
              <h4>Especificaciones:</h4>
              <ul>
                ${project.specs?.map(spec => `<li>${spec}</li>`).join('') || ''}
              </ul>
            </div>
          </div>
        </div>
      `;
      modal?.classList.add('active');
    }
  });

  // Function to get project details (to be implemented with actual data)
  function getProjectDetails(id: string) {
    // This should be replaced with actual data fetching
    return {
      title: 'Proyecto de ejemplo',
      description: 'Descripción detallada del proyecto...',
      image: 'placeholder.jpg',
      specs: ['Especificación 1', 'Especificación 2']
    };
  }
</script>
